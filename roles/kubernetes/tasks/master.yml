# roles/kubernetes/tasks/master.yml
---
- name: Install Kubernetes packages
  package:
    name:
      - kubectl-{{ k8s_version }}
      - kubelet-{{ k8s_version }}
      - kubeadm-{{ k8s_version }}
    state: present

- name: Configure kubelet
  template:
    src: kubelet.conf.j2
    dest: /etc/sysconfig/kubelet
    owner: root
    group: root
    mode: 0644
  notify: restart kubelet

- name: Initialize Kubernetes cluster
  command: >
    kubeadm init
    --pod-network-cidr={{ pod_network_cidr }}
    --service-cidr={{ service_cidr }}
    --control-plane-endpoint="{{ inventory_hostname }}"
    --upload-certs
    --apiserver-cert-extra-sans="{{ ansible_host }}"
    --ignore-preflight-errors=Swap
  register: kubeadm_init
  changed_when: "'Your Kubernetes control-plane has initialized' in kubeadm_init.stdout"
  args:
    creates: /etc/kubernetes/admin.conf

- name: Set up kubeconfig for user
  block:
    - name: Create .kube directory
      file:
        path: "~{{ ansible_user }}/.kube"
        state: directory
        mode: 0755

    - name: Copy admin.conf
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: "~{{ ansible_user }}/.kube/config"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0600

- name: Install Pod network
  command: kubectl apply -f "{{ network_plugins[network_plugin].manifest }}"
  when: kubeadm_init is changed
  register: network_install
  changed_when: "'created' in network_install.stdout or 'configured' in network_install.stdout"

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command
  changed_when: false

- name: Save join command
  copy:
    content: "{{ join_command.stdout }}"
    dest: /tmp/join-command.sh
    mode: 0755

- name: Validate cluster
  command: kubectl get nodes
  register: kubectl_nodes
  changed_when: false
  retries: 5
  delay: 10
  until: kubectl_nodes.rc == 0
  when: kubeadm_init is changed