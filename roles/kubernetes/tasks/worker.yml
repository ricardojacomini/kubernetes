# roles/kubernetes/tasks/worker.yml
---

- name: Set local Kubernetes version
  set_fact:
    k8s_version: "{{ versions.kubernetes }}"

- name: Print Kubernetes version
  debug:
    msg: "Using Kubernetes version: {{ k8s_version }}"

- name: Install Kubernetes packages
  package:
    name:
      - kubelet-{{ k8s_version }}
      - kubeadm-{{ k8s_version }}
      - kubernetes-cni-{{ versions.kubernetes_cni }}
    state: present

# ✅ Ensure kubelet is ready
- name: Ensure kubelet is installed
  package:
    name: kubelet
    state: present

- name: Reload systemd to detect new services
  command: systemctl daemon-reexec && systemctl daemon-reload
  changed_when: false

- name: Gather service facts
  service_facts:

- name: Ensure kubelet service is enabled and started
  systemd:
    name: kubelet
    enabled: yes
    state: started
  when: "'kubelet.service' in ansible_facts.services"

- name: "🔄 Configure kubelet"
  template:
    src: kubelet.conf.j2
    dest: /etc/sysconfig/kubelet
    owner: root
    group: root
    mode: 0644
  notify: "Restart Kubelet"
  tags: [kubernetes, kubelet]

- name: "🔍 Verify Network Range Availability (Worker)"
  shell: |
    ! ip route show | grep -q 192.168.1.0/24 &&
    ! ip route show | grep -q 192.168.2.0/24
  register: network_check
  failed_when: network_check.rc != 0
  changed_when: false
  tags: validation

- name: "🔗 Join Kubernetes Cluster"
  command: "{{ lookup('file', '/tmp/join-command.sh') }}"
  args:
    creates: /etc/kubernetes/kubelet.conf
  environment:
    KUBELET_EXTRA_ARGS: "--node-ip={{ ansible_default_ipv4.address }}"
  when: inventory_hostname in groups['workers']

- name: Configure containerd for Kubernetes
  template:
    src: containerd.conf.j2
    dest: /etc/containerd/config.toml
  notify: restart containerd

- name: "⏱️ Wait for Node Registration"
  wait_for:
    path: /etc/kubernetes/kubelet.conf
    timeout: 120