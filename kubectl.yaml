# -*- coding: utf-8 -*-

# Ricardo S Jacomini <rsjacomini@gmail.com>
# Date: Feb 28, 2025

# Playbook Downloads and installs the latest kubectl binary

# Version detection
# Architecture handling
# Checksum validation
# Installation to /usr/local/bin

---

- name: Get latest kubectl version
  uri:
    url: https://dl.k8s.io/release/stable.txt
    return_content: yes
  register: version

- name: Set kubectl architecture
  set_fact:
    kubectl_arch: "{{ 'amd64' if ansible_architecture == 'x86_64' else 'arm' }}"

- name: Download the latest kubectl release
  uri:
    url: https://dl.k8s.io/release/{{ version.content }}/bin/linux/{{ kubectl_arch }}/kubectl
    dest: /home/{{ ansible_user }}
  register: kubectl

- name: Download the kubectl checksum file
  uri:
    url: https://dl.k8s.io/release/{{ version.content }}/bin/linux/{{ kubectl_arch }}/kubectl.sha256
    dest: /home/{{ ansible_user }}

- name: Validate the kubectl binary against the checksum file
  shell: echo "$(cat /home/{{ ansible_user }}/kubectl.sha256)  /home/{{ ansible_user }}/kubectl" | sha256sum --check
  register: result
  failed_when: "'OK' not in result.stdout"

- name: Assert that the kubectl binary is OK
  vars:
    expected: "kubectl: OK"
  assert:
    that:
      - result.stdout == expected
    fail_msg: "{{ result.stdout }}"
    success_msg: "{{ result.stdout }}"

- name: Move kubectl and change permissions
  file:
    src: "{{ kubectl.path }}"
    dest: /usr/local/bin/kubectl
    state: hard
    owner: root
    group: root
    mode: '0755'

- name: Check if kubectl is installed
  shell: kubectl version --client
  failed_when: client.rc > 1