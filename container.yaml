# -*- coding: utf-8 -*-
# Ricardo S Jacomini <rsjacomini@gmail.com>
# Date: Feb 28, 2025

# Playbook Installs and configures Docker with NVIDIA Container Toolkit support

# Key features:
# OS validation (Ubuntu 24.04 or Rocky Linux 8)
# System package updates
# Containerd configuration
# GPU detection and NVIDIA toolkit setup
# Docker installation and configuration
# User group management
# Service management

# usage:
# Syntax Check
# ansible-playbook -i inventory.ini container.yaml --syntax-check

# Dry Run
# ansible-playbook -i inventory.ini container.yaml --check

# Run
# ansible-playbook -i inventory.ini container.yaml
# ansible-playbook -i inventory.ini container.yaml--limit l02

# Final Check: Run the following command after deployment to ensure the runtime is available:
#
#. ctr runtime check nvidia
#. OR
#
#. nvidia-container-runtime --version

# This playbook installs and configures Docker on the target hosts, including setting up the NVIDIA Container Toolkit if a GPU is detected.
# It ensures that the system meets the prerequisites for Docker and NVIDIA Container Toolkit installation.
# The playbook is designed to be idempotent, meaning it can be run multiple times without causing issues.
# It also handles the installation of Docker and NVIDIA Container Toolkit in a way that is compatible with both Ubuntu and Rocky Linux distributions.
# The playbook includes tasks to update the system, configure necessary modules and sysctl parameters, add repositories, install Docker and NVIDIA Container Toolkit, and configure the system for GPU support if available.
# The playbook also includes tasks to enable and start the Docker service, add the user to the Docker group, and restart the containerd service.
# to be flexible and can be easily adapted to different environments and requirements.
# to ensure that all necessary steps are taken to prepare the system for Docker and NVIDIA Container Toolkit installation, including handling any potential issues that may arise during the process.
# to be run as a single task, but it can also be broken down into smaller tasks if needed.
# to be run on a single host or multiple hosts, depending on the requirements of the environment.

---
- name: Install and Configure Docker
  become: yes
  hosts: reservations
  vars:
    has_nvidia: false  # Default value, overridden dynamically if GPU is found

  tasks:
    - fail:
        msg: "OS should be Ubuntu 24.04 or Rocky Linux 8, not {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: >
        (ansible_distribution == 'Ubuntu' and ansible_distribution_version != '24.04') or
        (ansible_distribution == 'Rocky' and ansible_distribution_version != '8') or
        (ansible_distribution != 'Ubuntu' and ansible_distribution != 'Rocky')

    - name: update APT packages
      apt:
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: update YUM packages
      yum:
        name: '*'
        state: latest
      when: ansible_distribution == 'Rocky'

    - name: configure modules for Containerd
      blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter

    - name: apply sysctl params without reboot
      command: sysctl --system

    - name: install APT Transport HTTPS
      apt:
        name: apt-transport-https
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: install YUM utils
      yum:
        name: yum-utils
        state: present
      when: ansible_distribution == 'Rocky'

    - name: Add NVIDIA GPG key and repository (Ubuntu)
      shell: |
        curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg
        curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
          sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
      when: ansible_distribution == 'Ubuntu'

    - name: Update package list (Ubuntu/Debian)
      apt:
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: Install NVIDIA Container Toolkit (Ubuntu/Debian)
      apt:
        name: nvidia-container-toolkit
        state: present
      when: ansible_distribution == 'Ubuntu'

    - name: Add NVIDIA repository (Rocky)
      shell: |
        curl -s -L https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo | \
        sudo tee /etc/yum.repos.d/nvidia-container-toolkit.repo
      when: ansible_distribution == 'Rocky'

    - name: Install NVIDIA Container Toolkit (RHEL/Rocky)
      yum:
        name: nvidia-container-toolkit
        state: present
      when: ansible_distribution == 'Rocky'

    - name: Configure NVIDIA runtime in containerd
      blockinfile:
        path: /etc/containerd/config.toml
        insertafter: '.*\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]'
        block: |
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia]
            runtime_type = "io.containerd.runc.v2"
            privileged_without_host_devices = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia.options]
              BinaryName = "/usr/bin/nvidia-container-runtime"
              SystemdCgroup = true
      notify: Restart containerd
      when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Rocky'

    - name: add Docker apt-key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker-apt-keyring.asc
        mode: '0644'
        force: true
      when: ansible_distribution == 'Ubuntu'

    - name: add Docker's APT repository
      apt_repository:
        repo: "deb [arch={{ 'amd64' if ansible_architecture == 'x86_64' else 'arm64' }} signed-by=/etc/apt/keyrings/docker-apt-keyring.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: add Docker's YUM repository
      yum_repository:
        name: docker-ce
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
        gpgcheck: yes
        gpgkey: https://download.docker.com/linux/centos/gpg
        enabled: yes
      when: ansible_distribution == 'Rocky'

    - name: Check GPU availability
      shell: lspci | grep -q NVIDIA
      register: gpu_check
      changed_when: false
      failed_when: false  # Prevent failure if no NVIDIA GPU is found

    - name: Set GPU availability fact
      set_fact:
        has_nvidia: "{{ gpu_check.rc == 0 }}"

    # Docker installation for CPU-only systems
    - name: Install Docker (CPU-only)
      block:
        - name: Update package database
          dnf:
            update_cache: yes

        - name: Add Docker repository
          shell: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

        - name: Install Docker
          dnf:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
            state: present
      when: not has_nvidia

    # NVIDIA repository setup and toolkit installation
    - name: Configure NVIDIA repository
      shell: |
        curl -s -L https://nvidia.github.io/libnvidia-container/stable/rpm/nvidia-container-toolkit.repo | tee /etc/yum.repos.d/nvidia-container-toolkit.repo
        sudo rpm --import https://nvidia.github.io/nvidia-container-runtime/gpgkey
        dnf clean all && dnf makecache
      when: has_nvidia

    - name: Verify NVIDIA Container Toolkit availability
      shell: dnf list nvidia-container-toolkit
      register: nvidia_check
      failed_when: nvidia_check.rc != 0
      changed_when: false
      when: has_nvidia

    - name: Install NVIDIA Container Toolkit and configure Docker
      block:
        - name: Remove conflicting NVIDIA packages
          dnf:
            name: cm-nvidia-container-toolkit
            state: absent
          ignore_errors: yes  # Ignore if not installed or other errors

        - name: Install NVIDIA Container Toolkit packages
          dnf:
            name: nvidia-container-toolkit
            state: present
            enablerepo: nvidia-container-toolkit
            install_weak_deps: false

        - name: Configure Docker for NVIDIA
          shell: |
            nvidia-ctk runtime configure --runtime=docker
      when: has_nvidia

    # Common tasks for Docker setup
    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Add user to Docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Ensure NVIDIA runtime is added to containerd
      lineinfile:
        path: /etc/containerd/config.toml
        insertafter: '.*\[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options\]'
        line: |
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia]
            runtime_type = "io.containerd.runc.v2"
            privileged_without_host_devices = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.nvidia.options]
              BinaryName = "/usr/bin/nvidia-container-runtime"
              SystemdCgroup = true
      notify: Restart containerd
      when: has_nvidia

    - name: Restart containerd & Docker
      systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
        daemon_reload: yes
      loop:
        - containerd
        - docker